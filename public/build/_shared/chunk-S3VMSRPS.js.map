{
  "version": 3,
  "sources": ["../../../app/utils/themeProvider.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/utils/themeProvider.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/utils/themeProvider.tsx\");\n  import.meta.hot.lastModified = \"1741256227409.218\";\n}\n// REMIX HMR END\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nexport let Theme = /*#__PURE__*/function (Theme) {\n  Theme[\"DARK\"] = \"dark\";\n  Theme[\"LIGHT\"] = \"light\";\n  return Theme;\n}({});\nconst ThemeContext = createContext(undefined);\nexport function ThemeProvider({\n  children,\n  defaultTheme = Theme.LIGHT\n}) {\n  _s();\n  const [theme, setTheme] = useState(() => {\n    // On client, try to read from localStorage first\n    if (typeof window !== \"undefined\") {\n      const storedTheme = window.localStorage.getItem(\"theme\");\n      if (storedTheme === Theme.DARK) {\n        return Theme.DARK;\n      }\n\n      // Explicitly use light theme for any other case\n      return Theme.LIGHT;\n    }\n\n    // Default for server-side rendering\n    return Theme.LIGHT;\n  });\n\n  // Apply theme class to html element when theme changes\n  useEffect(() => {\n    if (theme === Theme.DARK) {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n\n    // Store in localStorage for persistence\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  // Apply light theme on component mount to ensure consistency\n  useEffect(() => {\n    // Force light theme on initial load if no theme is set\n    if (!localStorage.getItem(\"theme\")) {\n      setTheme(Theme.LIGHT);\n    }\n  }, []);\n  const value = {\n    theme,\n    setTheme\n  };\n  return <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>;\n}\n_s(ThemeProvider, \"SVNrybXvIdFdMJI46YWt6aSlITo=\");\n_c = ThemeProvider;\nexport function useTheme() {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n}\n\n// Client-side function to initialize theme without server-side data\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function initializeTheme() {\n  const theme = localStorage.getItem(\"theme\") || Theme.LIGHT;\n  if (theme === Theme.DARK) {\n    document.documentElement.classList.add(\"dark\");\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;AAsBA,mBAA+D;AAmDtD;AAxET,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAAtB,IACE,MAAM,aAAa;AAErB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6B;AAC7B,cAAY,IAAI,eAAe;AACjC;AAIO,IAAI,QAAqB,yBAAUA,QAAO;AAC/C,EAAAA,OAAM,MAAM,IAAI;AAChB,EAAAA,OAAM,OAAO,IAAI;AACjB,SAAOA;AACT,EAAE,CAAC,CAAC;AACJ,IAAM,mBAAe,4BAAc,MAAS;AACrC,SAAS,cAAc;AAAA,EAC5B;AAAA,EACA,eAAe,MAAM;AACvB,GAAG;AACD,KAAG;AACH,QAAM,CAAC,OAAO,QAAQ,QAAI,uBAAS,MAAM;AAEvC,QAAI,OAAO,WAAW,aAAa;AACjC,YAAM,cAAc,OAAO,aAAa,QAAQ,OAAO;AACvD,UAAI,gBAAgB,MAAM,MAAM;AAC9B,eAAO,MAAM;AAAA,MACf;AAGA,aAAO,MAAM;AAAA,IACf;AAGA,WAAO,MAAM;AAAA,EACf,CAAC;AAGD,8BAAU,MAAM;AACd,QAAI,UAAU,MAAM,MAAM;AACxB,eAAS,gBAAgB,UAAU,IAAI,MAAM;AAAA,IAC/C,OAAO;AACL,eAAS,gBAAgB,UAAU,OAAO,MAAM;AAAA,IAClD;AAGA,iBAAa,QAAQ,SAAS,KAAK;AAAA,EACrC,GAAG,CAAC,KAAK,CAAC;AAGV,8BAAU,MAAM;AAEd,QAAI,CAAC,aAAa,QAAQ,OAAO,GAAG;AAClC,eAAS,MAAM,KAAK;AAAA,IACtB;AAAA,EACF,GAAG,CAAC,CAAC;AACL,QAAM,QAAQ;AAAA,IACZ;AAAA,IACA;AAAA,EACF;AACA,SAAO,mDAAC,aAAa,UAAb,EAAsB,OACzB,YADE;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACA,GAAG,eAAe,8BAA8B;AAChD,KAAK;AACE,SAAS,WAAW;AACzB,MAAI;AACJ,QAAM,cAAU,yBAAW,YAAY;AACvC,MAAI,YAAY,QAAW;AACzB,UAAM,IAAI,MAAM,8CAA8C;AAAA,EAChE;AACA,SAAO;AACT;AAGA,IAAI,UAAU,8BAA8B;AAO5C,IAAI;AACJ,aAAa,IAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["Theme"]
}
