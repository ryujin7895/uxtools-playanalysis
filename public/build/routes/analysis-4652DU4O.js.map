{
  "version": 3,
  "sources": ["../../../app/routes/analysis.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/analysis.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/analysis.tsx\");\n  import.meta.hot.lastModified = \"1741510376927.2336\";\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nimport { SingleAppAnalysis } from \"~/components/analysis/SingleAppAnalysis\";\nimport { AnalysisResults } from \"~/components/analysis/AnalysisResults\";\nimport { useNavigation } from \"@remix-run/react\";\nexport default function Analysis() {\n  _s();\n  const [appInput, setAppInput] = useState({\n    id: 1,\n    value: \"\",\n    error: \"\"\n  });\n  const [dateRange, setDateRange] = useState(\"30days\");\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const navigation = useNavigation();\n  const isAnalyzing = navigation.state === \"submitting\";\n  const handleInputChange = value => {\n    // Simple validation\n    let error = \"\";\n    if (!value.trim()) {\n      error = \"App ID or URL is required\";\n    } else if (!/^[a-zA-Z0-9._]+$/.test(value) && !/https:\\/\\/play\\.google\\.com\\/store\\/apps\\/details\\?id=([a-zA-Z0-9._]+)/.test(value)) {\n      error = \"Enter a valid App ID or Play Store URL\";\n    }\n    setAppInput({\n      ...appInput,\n      value,\n      error\n    });\n  };\n  const handleAddApp = () => {\n    // This would normally add another app for comparison\n  };\n  const handleReset = () => {\n    setAnalysisResult(null);\n    setAppInput({\n      id: 1,\n      value: \"\",\n      error: \"\"\n    });\n  };\n  return <div className=\"container mx-auto p-4\">\n      {!analysisResult ? <SingleAppAnalysis appInput={appInput} onInputChange={handleInputChange} dateRange={dateRange} onDateRangeChange={setDateRange} onAddApp={handleAddApp} isAnalyzing={isAnalyzing} /> : <AnalysisResults onReset={handleReset} appCount={1} result={analysisResult} />}\n    </div>;\n}\n_s(Analysis, \"Vdo/jYqXnyclmB28zqivkocmFAU=\", false, function () {\n  return [useNavigation];\n});\n_c = Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAqBA,mBAAyB;AAyCA;AA7DzB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8BAAgC,EAAE;AAAA,EAC3E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAOe,SAAR,WAA4B;AACjC,KAAG;AACH,QAAM,CAAC,UAAU,WAAW,QAAI,uBAAS;AAAA,IACvC,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,OAAO;AAAA,EACT,CAAC;AACD,QAAM,CAAC,WAAW,YAAY,QAAI,uBAAS,QAAQ;AACnD,QAAM,CAAC,gBAAgB,iBAAiB,QAAI,uBAAS,IAAI;AACzD,QAAM,aAAa,cAAc;AACjC,QAAM,cAAc,WAAW,UAAU;AACzC,QAAM,oBAAoB,WAAS;AAEjC,QAAI,QAAQ;AACZ,QAAI,CAAC,MAAM,KAAK,GAAG;AACjB,cAAQ;AAAA,IACV,WAAW,CAAC,mBAAmB,KAAK,KAAK,KAAK,CAAC,yEAAyE,KAAK,KAAK,GAAG;AACnI,cAAQ;AAAA,IACV;AACA,gBAAY;AAAA,MACV,GAAG;AAAA,MACH;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AACA,QAAM,eAAe,MAAM;AAAA,EAE3B;AACA,QAAM,cAAc,MAAM;AACxB,sBAAkB,IAAI;AACtB,gBAAY;AAAA,MACV,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,OAAO;AAAA,IACT,CAAC;AAAA,EACH;AACA,SAAO,mDAAC,SAAI,WAAU,yBACjB,WAAC,iBAAiB,mDAAC,qBAAkB,UAAoB,eAAe,mBAAmB,WAAsB,mBAAmB,cAAc,UAAU,cAAc,eAAxJ;AAAA;AAAA;AAAA;AAAA,SAAkL,IAAK,mDAAC,mBAAgB,SAAS,aAAa,UAAU,GAAG,QAAQ,kBAA5D;AAAA;AAAA;AAAA;AAAA,SAA4E,KADnR;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACA,GAAG,UAAU,gCAAgC,OAAO,WAAY;AAC9D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
